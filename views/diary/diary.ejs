<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="/stylesheets/diary.css">
</head>
<body>
    <%- include('../header.ejs') -%>
    <%- include('../menu.ejs') -%>
    <div class="diaryContainer">
        <main>
            <section class="diary-entry">
                <div class="photo">
                    <div class="photo-frame">
                        <img class="photo-of-the-day">
                    </div>
                    <input type="file" id="photoInput" style="display: none;" accept="image/*" onchange="addPhoto(event)">
                    <button class="photo-button" onclick="document.getElementById('photoInput').click()">+</button>
                </div>
                <div class="entry">
                    <div class="entry-inputs">
                        <div class="input-group">
                            <label for="date">
                            <input type="date" id="date" name="date" onchange="loadDiaryEntry()">
                        </div>
                        <input class="diary-id" type="hidden" value="">
                        <div class="input-group">
                            <label for="weather">
                            <input type="text" id="weather" name="weather" placeholder="오늘의 날씨">
                        </div>
                    </div>
                    <textarea id="diary-text" placeholder="오늘 하루는 어땠나요?"></textarea>
                    <div class="buttons">
                        <button class="save-button" onclick="saveDiary()">저장하기</button>
                    </div>
                </div>
            </section>
        </main>
    </div>
    <script>
        function getTodayDate() {
            const today = new Date();
            const year = today.getFullYear();
            const month = String(today.getMonth() + 1).padStart(2, '0');
            const day = String(today.getDate()).padStart(2, '0');
            return `${year}-${month}-${day}`;
        }

        document.addEventListener('DOMContentLoaded', () => {
            const dateInput = document.getElementById('date');
            dateInput.max = getTodayDate();
        });

        function loadDiaryEntry() {
            const date = document.getElementById('date').value;
            if (date) {
                fetch(`/diary/${date}`, {
                    method: 'GET',
                })
                .then(response => response.json())
                .then(data => {
                    if (Object.keys(data.diary).length != 0) {
                        document.querySelector('.diary-id').value = data.diary.user_id;
                        document.getElementById('weather').value = data.diary.weather;
                        document.getElementById('diary-text').value = data.diary.contents;
                        if (data.diary.photo) {
                            document.querySelector(".photo-of-the-day").setAttribute("src", data.diary.photo);
                        } else {
                            document.querySelector(".photo-of-the-day").setAttribute("src", "");
                        }
                    } else {
                        document.querySelector('.diary-id').value = '';
                        document.getElementById('weather').value = '';
                        document.getElementById('diary-text').value = '';
                        document.querySelector(".photo-of-the-day").setAttribute("src", "");
                    }
                })
                .catch(error => console.error('Error fetching diary entry:', error));
            }
        }

        function saveDiary() {
            const userID = 1;
            const diaryID = document.querySelector('.diary-id').value;
            const date = document.getElementById('date').value;
            const weather = document.getElementById('weather').value;
            const contents = document.getElementById('diary-text').value;
            const photoInput = document.getElementById('photoInput');
            const photoFile = photoInput.files[0];

            const formData = new FormData();
            formData.append('userID', userID);
            if (diaryID) {
                formData.append('diaryID', diaryID);
            }
            formData.append('date', date);
            formData.append('weather', weather);
            formData.append('contents', contents);
            if (photoFile) {
                formData.append('photo', photoFile);
            }

            fetch('/diary', {
                method: 'POST',
                body: formData,
            })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(err => { throw err; });
                }
                return response.json();
            })
            .then(data => {
                if (data.message) {
                    alert(data.message);
                }
            })
            .catch(error => {
                console.error('Error saving diary entry:', error);
                alert(`저장 중 오류가 발생했습니다: ${error.message}`);
            });
        }

        function updateDiary() {
            const date = document.getElementById('date').value;
            const weather = document.getElementById('weather').value;
            const contents = document.getElementById('diary-text').value;
            const photoInput = document.getElementById('photoInput');
            const photoFile = photoInput.files[0];

            const formData = new FormData();
            formData.append('date', date);
            formData.append('weather', weather);
            formData.append('contents', contents);
            if (photoFile) {
                formData.append('photo', photoFile);
            }

            fetch(`/diary/${date}`, {
                method: 'POST',
                body: formData,
            })
            .then(response => response.json())
            .then(data => {
                if (data.message) {
                    alert(data.message);
                }
            })
            .catch(error => console.error('Error updating diary entry:', error));
        }

        function addPhoto(event) {
            if (event.target.files.length === 0) return;

            var reader = new FileReader();

            reader.onload = function(event) {
                document.querySelector(".photo-of-the-day").setAttribute("src", event.target.result);
                console.log('Photo URL:', event.target.result); // 디버깅용 로그
            };

            reader.onerror = function(error) {
                console.error('Error reading file:', error);
                alert('사진을 읽는 중 오류가 발생했습니다.');
            };

            reader.readAsDataURL(event.target.files[0]);
        }
    </script>
</body>
</html>
